{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Locust Distributed Helm Chart Values",
  "type": "object",
  "properties": {
    "locust": {
      "type": "object",
      "properties": {
        "image": {
          "type": "object",
          "properties": {
            "repository": {
              "type": "string",
              "description": "Locust Docker image repository"
            },
            "tag": {
              "type": "string",
              "description": "Locust Docker image tag"
            },
            "pullPolicy": {
              "type": "string",
              "enum": ["Always", "IfNotPresent", "Never"],
              "description": "Image pull policy"
            }
          },
          "required": ["repository", "tag"]
        },
        "targetHost": {
          "type": "string",
          "description": "Default target host for load testing"
        },
        "master": {
          "type": "object",
          "properties": {
            "replicas": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1,
              "description": "Number of master replicas (should be 0 or 1)"
            },
            "resources": {
              "$ref": "#/definitions/resources"
            },
            "service": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["ClusterIP", "NodePort", "LoadBalancer"],
                  "description": "Kubernetes service type"
                },
                "webPort": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 65535
                },
                "masterPort": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 65535
                },
                "workerPort": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 65535
                }
              }
            }
          }
        },
        "worker": {
          "type": "object",
          "properties": {
            "replicas": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of worker replicas"
            },
            "resources": {
              "$ref": "#/definitions/resources"
            }
          }
        }
      },
      "required": ["image", "targetHost", "master", "worker"]
    },
    "filebrowser": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable file browser deployment"
        },
        "image": {
          "type": "object",
          "properties": {
            "repository": {
              "type": "string"
            },
            "tag": {
              "type": "string"
            },
            "pullPolicy": {
              "type": "string",
              "enum": ["Always", "IfNotPresent", "Never"]
            }
          }
        },
        "replicas": {
          "type": "integer",
          "minimum": 0,
          "maximum": 1
        },
        "resources": {
          "$ref": "#/definitions/resources"
        },
        "service": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["ClusterIP", "NodePort", "LoadBalancer"]
            },
            "port": {
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            }
          }
        }
      }
    },
    "storage": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable persistent storage"
        },
        "storageClass": {
          "type": "string",
          "description": "Storage class name (must support ReadWriteMany)"
        },
        "size": {
          "type": "string",
          "pattern": "^[0-9]+[EPTGMK]i?$",
          "description": "Storage size (e.g., 1Gi, 5Gi)"
        },
        "accessMode": {
          "type": "string",
          "enum": ["ReadWriteMany"],
          "description": "Access mode (must be ReadWriteMany for shared storage)"
        },
        "mountPath": {
          "type": "string",
          "description": "Mount path in containers"
        }
      },
      "required": ["enabled"]
    },
    "ingress": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable ingress"
        },
        "className": {
          "type": "string",
          "description": "Ingress class name"
        },
        "annotations": {
          "type": "object",
          "description": "Ingress annotations"
        },
        "locust": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "host": {
              "type": "string",
              "description": "Hostname for Locust web UI"
            },
            "path": {
              "type": "string"
            },
            "pathType": {
              "type": "string",
              "enum": ["Exact", "Prefix", "ImplementationSpecific"]
            }
          }
        },
        "filebrowser": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "host": {
              "type": "string",
              "description": "Hostname for file browser"
            },
            "path": {
              "type": "string"
            },
            "pathType": {
              "type": "string",
              "enum": ["Exact", "Prefix", "ImplementationSpecific"]
            }
          }
        }
      }
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "description": "Create service account"
        },
        "annotations": {
          "type": "object",
          "description": "Service account annotations"
        },
        "name": {
          "type": "string",
          "description": "Service account name"
        }
      }
    },
    "podAnnotations": {
      "type": "object",
      "description": "Pod annotations"
    },
    "podSecurityContext": {
      "type": "object",
      "description": "Pod security context"
    },
    "securityContext": {
      "type": "object",
      "description": "Container security context"
    },
    "nodeSelector": {
      "type": "object",
      "description": "Node selector"
    },
    "tolerations": {
      "type": "array",
      "description": "Tolerations"
    },
    "affinity": {
      "type": "object",
      "description": "Affinity rules"
    }
  },
  "definitions": {
    "resources": {
      "type": "object",
      "properties": {
        "requests": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string",
              "pattern": "^[0-9]+m?$"
            },
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+[EPTGMK]i?$"
            }
          }
        },
        "limits": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string",
              "pattern": "^[0-9]+m?$"
            },
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+[EPTGMK]i?$"
            }
          }
        }
      }
    }
  }
}
